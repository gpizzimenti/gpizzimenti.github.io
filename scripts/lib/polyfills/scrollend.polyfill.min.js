if(!("onscrollend"in window)){const e=100,t=new WeakMap,n=EventTarget.prototype.addEventListener,s=EventTarget.prototype.removeEventListener,l=new WeakMap;EventTarget.prototype.addEventListener=function(s,o,i){if("scrollend"===s){l.has(this)||l.set(this,new Map);const s=l.get(this);if(!s.has(o)){const l=function(n){t.has(this)&&clearTimeout(t.get(this));const s=setTimeout((()=>{const e=new Event("scrollend",{bubbles:!1!==i?.bubbles,cancelable:!1});Object.defineProperty(e,"target",{value:this,enumerable:!0}),this.dispatchEvent(e)}),e);t.set(this,s)};s.set(o,l),n.call(this,"scroll",l,i)}n.call(this,"scrollend",o,i)}else n.call(this,s,o,i)},EventTarget.prototype.removeEventListener=function(e,n,o){if("scrollend"===e){const e=l.get(this);if(e&&e.has(n)){const i=e.get(n);s.call(this,"scroll",i,o),e.delete(n),0===e.size&&l.delete(this),t.has(this)&&(clearTimeout(t.get(this)),t.delete(this))}s.call(this,"scrollend",n,o)}else s.call(this,e,n,o)},Object.defineProperty(window,"onscrollend",{get:function(){return this._onscrollend||null},set:function(e){this._onscrollend&&this.removeEventListener("scrollend",this._onscrollend),this._onscrollend=e,e&&this.addEventListener("scrollend",e)},enumerable:!0,configurable:!0})}export function isPolyfilled(){return!("onscrollend"in EventTarget.prototype)}export default{};