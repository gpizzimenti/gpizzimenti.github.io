const NEW_LINE=/\r\n|\n|\r/,EVENT="VEVENT",EVENT_START="BEGIN",EVENT_END="END",START_DATE="DTSTART",END_DATE="DTEND",DESCRIPTION="DESCRIPTION",SUMMARY="SUMMARY",LOCATION="LOCATION",ALARM="VALARM",UID="UID",keyMap={[UID]:"UUID",DTSTART:"startDate",DTEND:"endDate",[DESCRIPTION]:"description",[SUMMARY]:"summary",[LOCATION]:"location"},removeHtml=function(e){return e.replace(/(<([^>]+)>)/gi,"")},clean=e=>{return(a=e,a.replace(/(<([^>]+)>)/gi,"")).trim();var a},icsToJson=e=>{const a=[];let T={},t="";const E=e.split(NEW_LINE);let s=!1;for(let e=0,D=E.length;e<D;++e){const D=E[e],N=D.split(":");let c=N[0];const n=N[1];if(-1!==c.indexOf(";")){const e=c.split(";");c=e[0]}if(N.length<2)c.startsWith(" ")&&void 0!==t&&t.length&&(T[t]+=clean(D.substr(1)));else switch(t=keyMap[c],c){case"BEGIN":n===EVENT?T={}:n===ALARM&&(s=!0);break;case"END":s=!1,n===EVENT&&a.push(T);break;case"DTSTART":T[keyMap.DTSTART]=n;break;case"DTEND":T[keyMap.DTEND]=n;break;case DESCRIPTION:s||(T[keyMap.DESCRIPTION]=clean(n));break;case SUMMARY:T[keyMap.SUMMARY]=clean(n);break;case LOCATION:T[keyMap.LOCATION]=clean(n);break;case UID:T[keyMap.UID]=clean(n);break;default:}}return a};export default icsToJson;