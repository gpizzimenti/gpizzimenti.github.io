if("serviceWorker"in navigator){window.addEventListener("load",(async()=>{(async()=>{const t=await navigator.serviceWorker.register("/service-worker.min.js",{type:"module"});t.waiting&&t.active&&(window.swUpdate=!0,await e.skipWaiting()),t.addEventListener("updatefound",(()=>{const a=t.installing;a&&a.addEventListener("statechange",(async()=>{"installed"===a.state&&navigator.serviceWorker.controller&&(window.swUpdate=!0,setTimeout((async()=>{await e.prepareCachesForUpdate()}),500))}))}))})();const e={getWaitingWorker:async()=>(await navigator.serviceWorker.getRegistrations()).find((e=>e.waiting))?.waiting,skipWaiting:async()=>(await e.getWaitingWorker())?.postMessage({type:"SKIP_WAITING"}),prepareCachesForUpdate:async()=>(await e.getWaitingWorker())?.postMessage({type:"PREPARE_CACHES_FOR_UPDATE"})},t=async t=>{window.swUpdate&&(window.swUpdate=!1,await e.skipWaiting())};window.addEventListener("beforeunload",t),window.addEventListener("pagehide",t),window.addEventListener("online",(()=>{navigator.serviceWorker.controller.postMessage({type:"retry-requests"})}))}));const e=()=>`${(new Date).toTimeString().split(" ").shift()} - ${Date.now()}`;document.addEventListener("visibilitychange",(()=>{localStorage.setItem(`visibilitychange: ${document.visibilityState}`,e())})),["beforeunload","pageshow","pagehide","pagereveal","pageswap","freeze","resume"].forEach((t=>{window.addEventListener(t,(()=>{localStorage.setItem(t,e())}))}))}